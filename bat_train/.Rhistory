library(devtools)
install.packages('devtools')
#install.packages('devtools')
library(devtools)
packageVersion("devtools")
library(tidyverse)
install.packages('tidyverse')
library(tidyverse)
library(fs)
getwd()
create_package('foofactors')
getwd()
setwd('C:/Users/Anthony/Documents/GitHub/batdetect/bat_train')
test_file <- 'data/labelled_data/uk/test/55ff08f49048f31f7800453c.wav'
library(tuneR)
test_audio <- readWave(test_file)
test_audio
play(test_audio)
library(ggplot2)
library(seewave)
?ggspectro
## first layer
v <- ggspectro(test_audio)
v
## using geom_tile ##
v + geom_tile(aes(fill = amplitude)) + stat_contour()
## first layer
v <- ggspectro(test_audio, ovlp = 0.75)
## using geom_tile ##
v + geom_tile(aes(fill = amplitude)) + stat_contour()
0.02322*test_audio@samp.rate
as.integer(0.02322*test_audio@samp.rate)
win_len <- as.integer(0.02322*test_audio@samp.rate)
v <- ggspectro(test_audio, ovlp = 0.75, wl = win_len)
## using geom_tile ##
v + geom_tile(aes(fill = amplitude)) + stat_contour()
test_audio@left
plot(test_audio)
test_audio@right
test_audio@stereo
test_audio@pcm
plot(test_audio@left)
spec <- spectro(test_audio, ovlp = 0.75, wl = win_len)
spec <- spectro(test_audio)#, ovlp = 0.75, wl = win_len)
plot(test_audio)
getwd()
setwd('C:/Users/Anthony/Documents/GitHub/batdetect/bat_train')
test_file <- 'data/labelled_data/uk/test/55ff08f49048f31f7800453c.wav'
library(tuneR)
test_audio <- readWave(test_file)
test_audio
library(ggplot2)
library(seewave)
win_len <- as.integer(0.02322*test_audio@samp.rate)
spec <- spectro(test_audio)#, ovlp = 0.75, wl = win_len)
?stdft
# extract signal
snd = test_audio@left
# determine duration
dur = length(snd)/test_audio@samp.rate
dur # seconds
# determine sample rate
fs = test_audio@samp.rate
fs # Hz
snd = snd - mean(snd)
# plot waveform
plot(snd, type = 'l', xlab = 'Samples', ylab = 'Amplitude')
# plot waveform
plot(snd, type = 'l', xlab = 'Samples', ylab = 'Amplitude')
# plot waveform
plot(snd, type = 'l', xlab = 'Samples', ylab = 'Amplitude')
# plot waveform
plot(snd, type = 'l', xlab = 'Samples', ylab = 'Amplitude')
# plot waveform
plot(snd, type = 'l', xlab = 'Samples', ylab = 'Amplitude')
dev.off()
# plot waveform
plot(snd, type = 'l', xlab = 'Samples', ylab = 'Amplitude')
reticulate::source_python("data_set_params.py")
DataSetParams()
params <- DataSetParams()
params$aug_shift
